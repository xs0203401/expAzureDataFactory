{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactory20230718"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/yelp_review')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql_yelp/yelp_data"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "review_id",
						"type": "nvarchar"
					},
					{
						"name": "user_id",
						"type": "nvarchar"
					},
					{
						"name": "business_id",
						"type": "nvarchar"
					},
					{
						"name": "stars",
						"type": "int",
						"precision": 10
					},
					{
						"name": "useful",
						"type": "int",
						"precision": 10
					},
					{
						"name": "funny",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cool",
						"type": "int",
						"precision": 10
					},
					{
						"name": "text",
						"type": "nvarchar"
					},
					{
						"name": "date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ingestUTC",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "yelp_review"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/yelp_review_stg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql_yelp/yelp_data_stg"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "review_id",
						"type": "nvarchar"
					},
					{
						"name": "user_id",
						"type": "nvarchar"
					},
					{
						"name": "business_id",
						"type": "nvarchar"
					},
					{
						"name": "stars",
						"type": "int",
						"precision": 10
					},
					{
						"name": "useful",
						"type": "int",
						"precision": 10
					},
					{
						"name": "funny",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cool",
						"type": "int",
						"precision": 10
					},
					{
						"name": "text",
						"type": "nvarchar"
					},
					{
						"name": "date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ingestUTC",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "stg_yelp_review"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/yelp_tip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql_yelp/yelp_data"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "user_id",
						"type": "nvarchar"
					},
					{
						"name": "business_id",
						"type": "nvarchar"
					},
					{
						"name": "text",
						"type": "nvarchar"
					},
					{
						"name": "date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "compliment_count",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ingestUTC",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "yelp_tip"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/yelp_tip_stg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql_yelp/yelp_data_stg"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "user_id",
						"type": "nvarchar"
					},
					{
						"name": "business_id",
						"type": "nvarchar"
					},
					{
						"name": "text",
						"type": "nvarchar"
					},
					{
						"name": "date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "compliment_count",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ingestUTC",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "stg_yelp_tip"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/yelp_user')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql_yelp/yelp_data"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "user_id",
						"type": "nvarchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "review_count",
						"type": "int",
						"precision": 10
					},
					{
						"name": "yelping_since",
						"type": "nvarchar"
					},
					{
						"name": "useful",
						"type": "int",
						"precision": 10
					},
					{
						"name": "funny",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cool",
						"type": "int",
						"precision": 10
					},
					{
						"name": "elite",
						"type": "nvarchar"
					},
					{
						"name": "friends",
						"type": "nvarchar"
					},
					{
						"name": "fans",
						"type": "int",
						"precision": 10
					},
					{
						"name": "average_stars",
						"type": "float",
						"precision": 15
					},
					{
						"name": "compliment_hot",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_more",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_profile",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_cute",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_list",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_note",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_plain",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_cool",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_funny",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_writer",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_photos",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ingestUTC",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "yelp_user"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/yelp_user_stg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql_yelp/yelp_data_stg"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "user_id",
						"type": "nvarchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "review_count",
						"type": "int",
						"precision": 10
					},
					{
						"name": "yelping_since",
						"type": "nvarchar"
					},
					{
						"name": "useful",
						"type": "int",
						"precision": 10
					},
					{
						"name": "funny",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cool",
						"type": "int",
						"precision": 10
					},
					{
						"name": "elite",
						"type": "nvarchar"
					},
					{
						"name": "friends",
						"type": "nvarchar"
					},
					{
						"name": "fans",
						"type": "int",
						"precision": 10
					},
					{
						"name": "average_stars",
						"type": "float",
						"precision": 15
					},
					{
						"name": "compliment_hot",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_more",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_profile",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_cute",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_list",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_note",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_plain",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_cool",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_funny",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_writer",
						"type": "int",
						"precision": 10
					},
					{
						"name": "compliment_photos",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ingestUTC",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "stg_yelp_user"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "json_copy_business",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "json_source_business",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "json_copy_business",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "json_copy_checkin",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "json_source_checkin",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "json_copy_checkin",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "json_copy_review",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "json_source_review",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "json_copy_review",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "json_copy_tip",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "json_source_tip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "json_copy_tip",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "json_copy_user",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "json_source_user",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "json_copy_user",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BlobJsonProcess"
				},
				"annotations": [],
				"lastPublishTime": "2023-07-19T08:33:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_business_toSQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "json_copy_business",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "yelp_business_stg",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          business_id as string,",
						"          name as string,",
						"          address as string,",
						"          city as string,",
						"          state as string,",
						"          postal_code as string,",
						"          latitude as double,",
						"          longitude as double,",
						"          stars as double,",
						"          review_count as integer,",
						"          is_open as integer,",
						"          attributes as (ByAppointmentOnly as string, BusinessAcceptsCreditCards as string, BikeParking as string, RestaurantsPriceRange2 as string, CoatCheck as string, RestaurantsTakeOut as string, RestaurantsDelivery as string, Caters as string, WiFi as string, BusinessParking as string, WheelchairAccessible as string, HappyHour as string, OutdoorSeating as string, HasTV as string, RestaurantsReservations as string, DogsAllowed as string, Alcohol as string, GoodForKids as string, RestaurantsAttire as string, Ambience as string, RestaurantsTableService as string, RestaurantsGoodForGroups as string, DriveThru as string, NoiseLevel as string),",
						"          categories as string,",
						"          hours as (Monday as string, Tuesday as string, Wednesday as string, Thursday as string, Friday as string, Saturday as string, Sunday as string)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> source1",
						"source1 derive(ingestUTC = currentUTC(),",
						"          flatAttributes = flatten([attributes]),",
						"          flatHours = flatten([hours])) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          business_id as string,",
						"          name as string,",
						"          address as string,",
						"          city as string,",
						"          state as string,",
						"          postal_code as string,",
						"          latitude as double,",
						"          longitude as double,",
						"          stars as double,",
						"          review_count as integer,",
						"          is_open as integer,",
						"          attributes as string,",
						"          categories as string,",
						"          hours as string,",
						"          ingestUTC as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          business_id,",
						"          name,",
						"          address,",
						"          city,",
						"          state,",
						"          postal_code,",
						"          latitude,",
						"          longitude,",
						"          stars,",
						"          review_count,",
						"          is_open,",
						"          attributes = flatAttributes,",
						"          categories,",
						"          hours = flatHours,",
						"          ingestUTC",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_checkin_toSQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "json_copy_checkin",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "yelp_checkin_stg",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          business_id as string,",
						"          date as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> source1",
						"source1 derive(ingestUTC = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          business_id as string,",
						"          date as string,",
						"          ingestUTC as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_review_toSQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "json_copy_review",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "yelp_review_stg",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          review_id as string,",
						"          user_id as string,",
						"          business_id as string,",
						"          stars as double,",
						"          useful as integer,",
						"          funny as integer,",
						"          cool as integer,",
						"          text as string,",
						"          date as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> source1",
						"source1 derive(ingestUTC = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          review_id as string,",
						"          user_id as string,",
						"          business_id as string,",
						"          stars as integer,",
						"          useful as integer,",
						"          funny as integer,",
						"          cool as integer,",
						"          text as string,",
						"          date as timestamp,",
						"          ingestUTC as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/yelp_review_stg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_tip_toSQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "json_copy_tip",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "yelp_tip_stg",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          user_id as string,",
						"          business_id as string,",
						"          text as string,",
						"          date as string,",
						"          compliment_count as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> source1",
						"source1 derive(ingestUTC = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          user_id as string,",
						"          business_id as string,",
						"          text as string,",
						"          date as timestamp,",
						"          compliment_count as integer,",
						"          ingestUTC as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/yelp_tip_stg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_user_toSQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "json_copy_user",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "yelp_user_stg",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          user_id as string,",
						"          name as string,",
						"          review_count as integer,",
						"          yelping_since as string,",
						"          useful as integer,",
						"          funny as integer,",
						"          cool as integer,",
						"          elite as string,",
						"          friends as string,",
						"          fans as integer,",
						"          average_stars as double,",
						"          compliment_hot as integer,",
						"          compliment_more as integer,",
						"          compliment_profile as integer,",
						"          compliment_cute as integer,",
						"          compliment_list as integer,",
						"          compliment_note as integer,",
						"          compliment_plain as integer,",
						"          compliment_cool as integer,",
						"          compliment_funny as integer,",
						"          compliment_writer as integer,",
						"          compliment_photos as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> source1",
						"source1 derive(ingestUTC = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          user_id as string,",
						"          name as string,",
						"          review_count as integer,",
						"          yelping_since as string,",
						"          useful as integer,",
						"          funny as integer,",
						"          cool as integer,",
						"          elite as string,",
						"          friends as string,",
						"          fans as integer,",
						"          average_stars as double,",
						"          compliment_hot as integer,",
						"          compliment_more as integer,",
						"          compliment_profile as integer,",
						"          compliment_cute as integer,",
						"          compliment_list as integer,",
						"          compliment_note as integer,",
						"          compliment_plain as integer,",
						"          compliment_cool as integer,",
						"          compliment_funny as integer,",
						"          compliment_writer as integer,",
						"          compliment_photos as integer,",
						"          ingestUTC as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/yelp_user_stg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rawIngestionFromBlob')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "json_copy_business",
								"type": "DatasetReference"
							},
							"name": "cpyBusiness"
						},
						{
							"dataset": {
								"referenceName": "json_copy_checkin",
								"type": "DatasetReference"
							},
							"name": "cpyCheckin"
						},
						{
							"dataset": {
								"referenceName": "json_copy_review",
								"type": "DatasetReference"
							},
							"name": "cpyReview"
						},
						{
							"dataset": {
								"referenceName": "json_copy_tip",
								"type": "DatasetReference"
							},
							"name": "cpyTip"
						},
						{
							"dataset": {
								"referenceName": "json_copy_user",
								"type": "DatasetReference"
							},
							"name": "cpyUser"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "json_rawStage",
								"type": "DatasetReference"
							},
							"name": "sinkToRawStage"
						}
					],
					"transformations": [
						{
							"name": "joinReviewBusiness"
						},
						{
							"name": "joinBusinessCheckin"
						},
						{
							"name": "joinUserTip"
						},
						{
							"name": "joinReviewUser"
						},
						{
							"name": "ingestionCurrentUTC",
							"description": "add column [ingestionCurrentUTC]"
						}
					],
					"scriptLines": [
						"source(output(",
						"          business_id as string,",
						"          name as string,",
						"          address as string,",
						"          city as string,",
						"          state as string,",
						"          postal_code as string,",
						"          latitude as double,",
						"          longitude as double,",
						"          stars as double,",
						"          review_count as integer,",
						"          is_open as integer,",
						"          attributes as (ByAppointmentOnly as string, BusinessAcceptsCreditCards as string, BikeParking as string, RestaurantsPriceRange2 as string, CoatCheck as string, RestaurantsTakeOut as string, RestaurantsDelivery as string, Caters as string, WiFi as string, BusinessParking as string, WheelchairAccessible as string, HappyHour as string, OutdoorSeating as string, HasTV as string, RestaurantsReservations as string, DogsAllowed as string, Alcohol as string, GoodForKids as string, RestaurantsAttire as string, Ambience as string, RestaurantsTableService as string, RestaurantsGoodForGroups as string, DriveThru as string, NoiseLevel as string),",
						"          categories as string,",
						"          hours as (Monday as string, Tuesday as string, Wednesday as string, Thursday as string, Friday as string, Saturday as string, Sunday as string)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> cpyBusiness",
						"source(output(",
						"          business_id as string,",
						"          date as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> cpyCheckin",
						"source(output(",
						"          review_id as string,",
						"          user_id as string,",
						"          business_id as string,",
						"          stars as double,",
						"          useful as integer,",
						"          funny as integer,",
						"          cool as integer,",
						"          text as string,",
						"          date as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> cpyReview",
						"source(output(",
						"          user_id as string,",
						"          business_id as string,",
						"          text as string,",
						"          date as string,",
						"          compliment_count as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> cpyTip",
						"source(output(",
						"          user_id as string,",
						"          name as string,",
						"          review_count as integer,",
						"          yelping_since as string,",
						"          useful as integer,",
						"          funny as integer,",
						"          cool as integer,",
						"          elite as string,",
						"          friends as string,",
						"          fans as integer,",
						"          average_stars as double,",
						"          compliment_hot as integer,",
						"          compliment_more as integer,",
						"          compliment_profile as integer,",
						"          compliment_cute as integer,",
						"          compliment_list as integer,",
						"          compliment_note as integer,",
						"          compliment_plain as integer,",
						"          compliment_cool as integer,",
						"          compliment_funny as integer,",
						"          compliment_writer as integer,",
						"          compliment_photos as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> cpyUser",
						"cpyReview, joinBusinessCheckin join(cpyReview@business_id == cpyBusiness@business_id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinReviewBusiness",
						"cpyBusiness, cpyCheckin join(cpyBusiness@business_id == cpyCheckin@business_id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinBusinessCheckin",
						"cpyUser, cpyTip join(cpyUser@user_id == cpyTip@user_id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinUserTip",
						"joinReviewBusiness, joinUserTip join(cpyReview@user_id == cpyUser@user_id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinReviewUser",
						"joinReviewUser derive(ingestionCurrentUTC = currentUTC()) ~> ingestionCurrentUTC",
						"ingestionCurrentUTC sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkToRawStage"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyToBlob_toSql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "json_copy_business",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure _ createStgTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "json_source_business",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "json_copy_business",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "json_copy_checkin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure _ createStgTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "json_source_checkin",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "json_copy_checkin",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "json_copy_review",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data flow User",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "json_source_review",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "json_copy_review",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "json_copy_tip",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data flow User",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "json_source_tip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "json_copy_tip",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "json_copy_user",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure _ createStgTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "json_source_user",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "json_copy_user",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow Business",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "json_copy_business",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_business_toSQL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow Checkin",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "json_copy_checkin",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_checkin_toSQL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow Review",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "json_copy_review",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_review_toSQL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow Tip",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "json_copy_tip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_tip_toSQL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow User",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "json_copy_user",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_user_toSQL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Stored procedure _ createStgTables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_createStgTables]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BlobSqlProcess"
				},
				"annotations": [],
				"lastPublishTime": "2023-07-19T08:33:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_business_toSQL')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow_checkin_toSQL')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow_review_toSQL')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow_tip_toSQL')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow_user_toSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rawIngestionFromBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data Flow rawIngestionFromBlob",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "rawIngestionFromBlob",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"cpyBusiness": {},
									"cpyCheckin": {},
									"cpyReview": {},
									"cpyTip": {},
									"cpyUser": {},
									"sinkToRawStage": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BlobJsonProcess"
				},
				"annotations": [],
				"lastPublishTime": "2023-07-19T19:54:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/rawIngestionFromBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_Blob_toSql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_user_toSQL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow1_copy1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_review_toSQL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BlobSqlProcess"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_user_toSQL')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow_review_toSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FullPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copyToBlob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "rawIngestionFromBlob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BlobJsonProcess"
				},
				"annotations": [],
				"lastPublishTime": "2023-07-25T22:36:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copyToBlob')]",
				"[concat(variables('factoryId'), '/pipelines/rawIngestionFromBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FullPipeline_sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copyToBlob_toSql",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copyToBlob_toSql",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BlobSqlProcess"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copyToBlob_toSql')]"
			]
		}
	]
}